// <auto-generated />
using System;
using Desafio.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Desafio.Migrations
{
    [DbContext(typeof(ConsultorioContexto))]
    [Migration("20230413043045_consultas")]
    partial class consultas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Desafio.Model.Consulta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("CPFPaciente")
                        .HasColumnType("bigint")
                        .HasColumnName("cpf_paciente");

                    b.Property<DateTime>("DataHoraFinal")
                        .HasColumnType("Timestamp without Time Zone")
                        .HasColumnName("data_hora_final");

                    b.Property<DateTime>("DataHoraInicial")
                        .HasColumnType("Timestamp without Time Zone")
                        .HasColumnName("data_hora_inicial");

                    b.Property<TimeSpan>("TempoConsulta")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("Interval")
                        .HasColumnName("tempo_consulta")
                        .HasComputedColumnSql("SELECT AGE(data_hora_final, data_hora_inicial)", true);

                    b.HasKey("Id")
                        .HasName("pk_consultas");

                    b.HasIndex("CPFPaciente")
                        .HasDatabaseName("ix_consultas_cpf_paciente");

                    b.ToTable("consultas", (string)null);
                });

            modelBuilder.Entity("Desafio.Model.Paciente", b =>
                {
                    b.Property<long>("CPF")
                        .HasColumnType("bigint")
                        .HasColumnName("cpf");

                    b.Property<DateTime>("DataDeNascimento")
                        .HasColumnType("Date")
                        .HasColumnName("data_de_nascimento");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.HasKey("CPF")
                        .HasName("pk_pacientes");

                    b.ToTable("pacientes", (string)null);
                });

            modelBuilder.Entity("Desafio.Model.Consulta", b =>
                {
                    b.HasOne("Desafio.Model.Paciente", "Paciente")
                        .WithMany("Consultas")
                        .HasForeignKey("CPFPaciente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_consultas_pacientes_paciente_temp_id");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("Desafio.Model.Paciente", b =>
                {
                    b.Navigation("Consultas");
                });
#pragma warning restore 612, 618
        }
    }
}
